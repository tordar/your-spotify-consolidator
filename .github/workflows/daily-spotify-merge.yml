name: Daily Spotify Data Merge

on:
  schedule:
    # Run daily at 2 AM UTC (adjust timezone as needed)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  fetch-and-merge:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for existing data
        id: check-data
        run: |
          if [ -d "merged-streaming-history" ] && [ "$(ls -A merged-streaming-history/*.json 2>/dev/null)" ]; then
            echo "has_existing_data=true" >> $GITHUB_OUTPUT
            echo "Found existing merged streaming history"
          else
            echo "has_existing_data=false" >> $GITHUB_OUTPUT
            echo "No existing merged streaming history found"
          fi
          
      - name: Fetch recent Spotify data
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
        run: npm run fetch-recent-plays
        
      - name: Merge with existing data
        if: steps.check-data.outputs.has_existing_data == 'true'
        run: npm run merge-recent-data
        
      - name: Create initial data from recent plays only
        if: steps.check-data.outputs.has_existing_data == 'false'
        run: |
          echo "No existing data found, creating initial dataset from recent plays..."
          # This would need a script to convert recent-plays to the merged format
          # For now, we'll just note that this case needs handling
          echo "⚠️  Need to implement initial data creation from recent plays"
          
      - name: Upload updated data
        uses: actions/upload-artifact@v4
        with:
          name: updated-listening-history
          path: |
            complete-listening-history/
            recent-plays-*.json
          retention-days: 7
          
      - name: Commit updated data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add all new/updated files
          git add complete-listening-history/ recent-plays-*.json
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Daily Spotify data update [skip ci]"
            git push
          fi
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Daily Spotify data merge failed"
          # Could add notification logic here (email, Slack, etc.)
